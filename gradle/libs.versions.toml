[versions]
# Build
appcompat = "1.7.1"
appName = "6.1.4"
appCode = "60104" # Read x.yy.zz to match version name
cardview = "1.0.0"
constraintlayout = "2.2.1"
fragmentVersion = "1.8.9"
gradle = "8.13.0"
# Common
guava = "33.5.0-android"
junitVersion = "1.3.0"
localbroadcastmanager = "1.1.0"
material = "1.13.0"
okhttp = "5.1.0"
pagingRuntime = "3.3.6"
preference = "1.2.1"
recyclerview = "1.4.0"
roomCompiler = "2.8.0"
swiperefreshlayout = "1.1.0"
timber = "5.0.1"
# Root
libsu = "6.0.0"
openssl = "1.1.1q-beta-1"
# VPN
pcap4jCore = "1.8.2"
pcap4jPacketfactoryStatic = "1.8.2"
dnsjava = "3.6.3"
slf4j = "1.7.36"
# Test
junit = "4.13.2"
json = "20250517"
androidxTestCore = "1.7.0"
androidXCoreTesting = "2.2.0"
workRuntime = "2.10.4"

[libraries]
# Build
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-cardview = { module = "androidx.cardview:cardview", version.ref = "cardview" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentVersion" }
androidx-localbroadcastmanager = { module = "androidx.localbroadcastmanager:localbroadcastmanager", version.ref = "localbroadcastmanager" }
androidx-paging-runtime = { module = "androidx.paging:paging-runtime", version.ref = "pagingRuntime" }
androidx-preference = { module = "androidx.preference:preference", version.ref = "preference" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerview" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomCompiler" }
androidx-room-paging = { module = "androidx.room:room-paging", version.ref = "roomCompiler" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomCompiler" }
androidx-swiperefreshlayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "swiperefreshlayout" }
androidx-work-runtime = { module = "androidx.work:work-runtime", version.ref = "workRuntime" }
fragment = { module = "androidx.fragment:fragment", version.ref = "fragmentVersion" }
gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
# Common
guava = { module = "com.google.guava:guava", version.ref = "guava" }
material = { module = "com.google.android.material:material", version.ref = "material" }
okhttp3-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
# Root
libsu = { module = "com.github.topjohnwu.libsu:core", version.ref = "libsu" }
openssl = { module = "com.android.ndk.thirdparty:openssl", version.ref = "openssl" }
# VPN
pcap4j-core = { module = "org.pcap4j:pcap4j-core", version.ref = "pcap4jCore" }
pcap4j-pcap4j-packetfactory-static = { module = "org.pcap4j:pcap4j-packetfactory-static", version.ref = "pcap4jPacketfactoryStatic" }
dnsjava = { module = "dnsjava:dnsjava", version.ref = "dnsjava" }
slf4j-android = { module = "org.slf4j:slf4j-android", version.ref = "slf4j" }
okhttp-dnsoverhttps = { module = "com.squareup.okhttp3:okhttp-dnsoverhttps", version.ref = "okhttp" }
# Test
junit = { module = "junit:junit", version.ref = "junit" }
json = { module = "org.json:json", version.ref = "json" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidxTestCore" }
androidx-test-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "androidXCoreTesting" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "junitVersion" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidxTestCore" }

[bundles]
pcap4j = ["pcap4j-core", "pcap4j-pcap4j-packetfactory-static"]
androidx-test = ["androidx-test-core", "androidx-test-core-testing", "androidx-test-ext-junit", "androidx-test-runner"]

[plugins]

